################################################################################
# Diamond Configuration File
################################################################################

################################################################################
### Options for the server
[server]

# Handlers for published metrics.
handlers = <--HANDLERS-->

# User diamond will run as
# Leave empty to use the current user
user =

# Group diamond will run as
# Leave empty to use the current group
group =

# Pid file, on systemd if not using default PID file
# make sure you also change systemd's diamond unit.
pid_file = /var/run/diamond.pid

# Directory to load collector modules from
collectors_path = /usr/local/share/diamond/collectors/

# Directory to load collector configs from
collectors_config_path = /etc/diamond/collectors/

# Number of seconds between each collector load
# collectors_load_delay = 1.0

# Directory to load handler configs from
handlers_config_path = /etc/diamond/handlers/

# Directory to load handler modules from
handlers_path = /usr/local/share/diamond/handlers/

# Maximum number of metrics waiting to be processed by handlers.
# When metric queue is full, new metrics are dropped.
metric_queue_size = 16384

# Abort the diamond process if the handler process exits
abort_on_handlers_process_exit = False

################################################################################
### Options for handlers
[handlers]

# daemon logging handler(s)
keys = stdout

### Defaults options for all Handlers
[[default]]

[[ArchiveHandler]]

# File to write archive log files
log_file = /var/log/diamond/archive.log

# Number of days to keep archive log files
days = 7

[[GraphiteHandler]]
### Options for GraphiteHandler

# Graphite server host
host = 127.0.0.1

# Port to send metrics to
port = 2003

# Socket timeout (seconds)
timeout = 15

# Batch size for metrics
batch = 1

################################################################################
### Options for collectors
[collectors]

[[default]]
### Defaults options for all Collectors

# Uncomment and set to hardcode a hostname for the collector path
# Keep in mind, periods are seperators in graphite
# hostname = my_custom_hostname

# If you prefer to just use a different way of calculating the hostname
# Uncomment and set this to one of these values:

# smart             = Default. Tries fqdn_short. If that's localhost, uses hostname_short

# fqdn_short        = Default. Similar to hostname -s
# fqdn              = hostname output
# fqdn_rev          = hostname in reverse (com.example.www)

# uname_short       = Similar to uname -n, but only the first part
# uname_rev         = uname -r in reverse (com.example.www)

# hostname_short    = `hostname -s`
# hostname          = `hostname`
# hostname_rev      = `hostname` in reverse (com.example.www)

# shell             = Run the string set in hostname as a shell command and use its
#                     output(with spaces trimmed off from both ends) as the hostname.

# hostname_method = smart

# Path Prefix and Suffix
# you can use one or both to craft the path where you want to put metrics
# such as: %(path_prefix)s.$(hostname)s.$(path_suffix)s.$(metric)s
path_prefix = <--PREFIX-->
# path_suffix =

# Path Prefix for Virtual Machines
# If the host supports virtual machines, collectors may report per
# VM metrics. Following OpenStack nomenclature, the prefix for
# reporting per VM metrics is "instances", and metric foo for VM
# bar will be reported as: instances.bar.foo...
# instance_prefix = instances

# Default Poll Interval (seconds)
interval = 60

################################################################################
### Options for logging
# for more information on file format syntax:
# http://docs.python.org/library/logging.config.html#configuration-file-format

[loggers]

keys = root

# handlers are higher in this config file, in:
# [handlers]
# keys = ...

[formatters]

keys = default

[logger_root]

level = WARN
handlers = stdout
propagate = 1

[handler_stdout]

class = StreamHandler
level = WARN
formatter = default
args = (sys.stdout,)

[formatter_default]

format = [%(asctime)s] [%(threadName)s] %(message)s
datefmt =
